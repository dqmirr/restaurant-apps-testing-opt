{"version":3,"file":"app~7bd12dde.bundle.js","mappings":";0YACA,gnGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEA,IAAQC,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IAwBF,QArB8B,CACtBC,cAAa,SAACC,GAAI,iHACRP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAD5B,EAExB,EAEME,eAAc,WAAG,iHACPT,EAAS,uCAAEU,OAAOX,IAAiB,0CAD5B,EAEvB,EAEMY,cAAa,SAACC,GAAY,oGAC1BA,EAAWC,eAAe,MAAK,iEAGrBb,EAAS,uCAAEc,IAAIf,EAAmBa,IAAU,0CAJ5B,EAKhC,EAEMG,iBAAgB,SAACR,GAAI,iHACXP,EAAS,8CAASD,EAAmBQ,IAAE,0CAD5B,EAE3B,gDCtBF,QALqB,CACnBS,gBAAiB,GAAF,OAAKnB,EAAAA,EAAAA,aAAmB,SACvCoB,kBAAmB,SAACV,GAAE,gBAAQV,EAAAA,EAAAA,aAAmB,mBAAWU,EAAE,sPCHhE,irOAiBA,QAhBsB,yBADtB,4FACsB,SADtB,QAOG,EANmB,EAanB,OAdH,EACsB,OADtB,EACsB,+CACpB,sGACyBW,MAAMC,EAAAA,iBAA6B,OAA5C,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBAEXA,EAAaC,aAAW,2CAChC,6FAED,WAAiChB,GAAE,yFACVW,MAAMC,EAAAA,kBAA+BZ,IAAI,OAAlD,OAARa,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBAEXA,EAAaV,YAAU,2CAC/B,+CAdH,6DAcG,EAbmB,mCCOtB,QATe,CACbY,WAAY,uBACZC,aAAc,sCACdC,qBAAsB,oDACtBC,qBAAsB,oDACtB/B,cAAe,2BACfE,iBAAkB,EAClBC,kBAAmB,2TCNrB,gnGAAAJ,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,+kBAOA,IAAMiC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,SAC/BC,OAAQF,SAASC,cAAc,WAC/BE,QAASH,SAASC,cAAc,kBAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,OAAM,YAAE,8EACb,OAAjBR,EAAIS,aAAa,UACXC,EAAAA,EAAAA,KAAY","sources":["webpack://restaurant-apps/./src/scripts/data/restaurant-apps-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restaurant-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import { openDB } from 'idb';\nimport CONFIG from '../globals/config';\n\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\n\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n  upgrade(database) {\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n  },\n});\n\nconst FavoriteRestaurantIdb = {\n  async getRestaurant(id) {\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\n  },\n\n  async getRestaurants() {\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\n  },\n\n  async putRestaurant(restaurant) {\n    if(!restaurant.hasOwnProperty('id')){\n      return;\n    }\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\n  },\n\n  async deleteRestaurant(id) {\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\n  },\n};\n\nexport default FavoriteRestaurantIdb;\n","import CONFIG from './config';\n\nconst API_ENDPOINT = {\n  RESTAURANT_LIST: `${CONFIG.BASE_API_URL}/list`,\n  RESTAURANT_DETAIL: (id) => `${CONFIG.BASE_API_URL}/detail/${id}`,\n};\n\nexport default API_ENDPOINT;\n","import API_ENDPOINT from '../globals/api-endpoint';\n\nclass RestaurantSource {\n  static async getRestaurantList() {\n    const response = await fetch(API_ENDPOINT.RESTAURANT_LIST);\n    const responseJson = await response.json();\n\n    return responseJson.restaurants;\n  }\n\n  static async getRestaurantDetail(id) {\n    const response = await fetch(API_ENDPOINT.RESTAURANT_DETAIL(id));\n    const responseJson = await response.json();\n\n    return responseJson.restaurant;\n  }\n}\n\nexport default RestaurantSource;\n","const CONFIG = {\n  CACHE_NAME: 'restaurant-apps-v1.0',\n  BASE_API_URL: 'https://restaurant-api.dicoding.dev',\n  BASE_IMAGE_URL_SMALL: 'https://restaurant-api.dicoding.dev/images/small/',\n  BASE_IMAGE_URL_LARGE: 'https://restaurant-api.dicoding.dev/images/large/',\n  DATABASE_NAME: 'restaurant-apps-database',\n  DATABASE_VERSION: 1,\n  OBJECT_STORE_NAME: 'restaurants',\n};\nexport default CONFIG;\n","import 'regenerator-runtime';\nimport '../styles/main.css';\nimport '../styles/responsive.css';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\nconst app = new App({\n  button: document.querySelector('#menu'),\n  drawer: document.querySelector('#drawer'),\n  content: document.querySelector('#mainContent'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', async () => {\n  app.renderPage();\n  await swRegister();\n});\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getRestaurants","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","RESTAURANT_LIST","RESTAURANT_DETAIL","fetch","API_ENDPOINT","response","json","responseJson","restaurants","CACHE_NAME","BASE_API_URL","BASE_IMAGE_URL_SMALL","BASE_IMAGE_URL_LARGE","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}